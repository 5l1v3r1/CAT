<?php 
/* Cachekey: cache/stash_default/documentation\api\php\0179422519add22296c73200d65d77f5/ */
/* Type: array */
/* Expiration: 2019-04-13T13:19:27+00:00 */



$loaded = true;
$expiration = 1555161567;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789030;

