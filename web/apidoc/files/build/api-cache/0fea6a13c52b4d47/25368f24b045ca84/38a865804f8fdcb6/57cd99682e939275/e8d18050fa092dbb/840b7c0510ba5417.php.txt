<?php 
/* Cachekey: cache/stash_default/documentation\api\php\cf6a74bb33d47a9071a0428bb63833e0/ */
/* Type: array */
/* Expiration: 2019-04-14T02:41:36+00:00 */



$loaded = true;
$expiration = 1555209696;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789030;

