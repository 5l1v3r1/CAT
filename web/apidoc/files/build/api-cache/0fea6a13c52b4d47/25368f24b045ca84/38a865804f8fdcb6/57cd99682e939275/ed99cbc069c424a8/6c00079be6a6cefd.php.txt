<?php 
/* Cachekey: cache/stash_default/documentation\api\php\a8f7de4b34ff1f797006d614271691d4/ */
/* Type: array */
/* Expiration: 2019-04-14T04:55:23+00:00 */



$loaded = true;
$expiration = 1555217723;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789030;

