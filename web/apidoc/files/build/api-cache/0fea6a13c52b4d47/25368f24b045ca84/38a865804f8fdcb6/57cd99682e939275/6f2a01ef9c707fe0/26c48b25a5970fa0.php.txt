<?php 
/* Cachekey: cache/stash_default/documentation\api\php\bb16ff3138f8e682887a4b9399df1b6c/ */
/* Type: array */
/* Expiration: 2019-04-13T19:38:39+00:00 */



$loaded = true;
$expiration = 1555184319;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789030;

